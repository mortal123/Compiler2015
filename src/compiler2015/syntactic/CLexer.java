// Generated from C.g4 by ANTLR 4.5

    package compiler2015.syntactic;
    import compiler2015.ast.*;
    import java.util.*;
 
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, Whitespace=57, Multi_comment=58, 
		Single_comment=59, Preprocessing=60, Hex=61, Dec=62, Oct=63, CHARACTERLITERAL=64, 
		STRINGLITERAL=65, Identifier=66;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "Whitespace", 
		"EOL", "Multi_comment", "Single_comment", "Preprocessing", "Hex", "Dec", 
		"Oct", "Digit", "HexDigit", "OctDigit", "Letter", "CHARACTERLITERAL", 
		"STRINGLITERAL", "Identifier"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'('", "')'", "','", "'='", "'{'", "'}'", "'void'", "'char'", 
		"'int'", "'struct'", "'union'", "'['", "']'", "'*'", "'if'", "'else'", 
		"'while'", "'for'", "'continue'", "'break'", "'return'", "'*='", "'/='", 
		"'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'||'", 
		"'&&'", "'|'", "'^'", "'&'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", 
		"'<<'", "'>>'", "'+'", "'-'", "'/'", "'%'", "'++'", "'--'", "'sizeof'", 
		"'~'", "'!'", "'.'", "'->'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "Whitespace", "Multi_comment", 
		"Single_comment", "Preprocessing", "Hex", "Dec", "Oct", "CHARACTERLITERAL", 
		"STRINGLITERAL", "Identifier"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "C.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2D\u01cb\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2"+
		"\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3"+
		"#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3"+
		",\3,\3-\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3"+
		"\63\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\67\3"+
		"\67\38\38\39\39\39\3:\6:\u014a\n:\r:\16:\u014b\3:\3:\3;\3;\3;\5;\u0153"+
		"\n;\3<\3<\3<\3<\7<\u0159\n<\f<\16<\u015c\13<\3<\3<\3<\3<\3<\3=\3=\3=\3"+
		"=\7=\u0167\n=\f=\16=\u016a\13=\3=\3=\3>\3>\7>\u0170\n>\f>\16>\u0173\13"+
		">\3>\3>\3>\3>\3?\3?\3?\6?\u017c\n?\r?\16?\u017d\3@\3@\3@\7@\u0183\n@\f"+
		"@\16@\u0186\13@\5@\u0188\n@\3A\3A\6A\u018c\nA\rA\16A\u018d\3B\3B\3C\3"+
		"C\5C\u0194\nC\3D\3D\3E\5E\u0199\nE\3F\3F\3F\3F\5F\u019f\nF\3F\3F\3F\3"+
		"F\3F\3F\3F\3F\3F\3F\3F\3F\3F\3F\3F\3F\5F\u01b1\nF\3F\3F\3F\3F\5F\u01b7"+
		"\nF\3G\3G\3G\3G\7G\u01bd\nG\fG\16G\u01c0\13G\3G\3G\3H\3H\3H\7H\u01c7\n"+
		"H\fH\16H\u01ca\13H\3\u015a\2I\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62c\63e\64g\65i\66k\67m8o9q:s;u\2w<y={>}?\177@\u0081A\u0083\2\u0085"+
		"\2\u0087\2\u0089\2\u008bB\u008dC\u008fD\3\2\16\5\2\13\f\17\17\"\"\4\2"+
		"\f\f\17\17\4\2ZZzz\3\2\63;\3\2\62;\4\2CHch\3\2\629\6\2&&C\\aac|\13\2$"+
		"$))\62\62^^ddhhppttvv\4\2))^^\n\2$$))^^ddhhppttvv\4\2$$^^\u01d7\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o"+
		"\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2"+
		"\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f"+
		"\3\2\2\2\3\u0091\3\2\2\2\5\u0093\3\2\2\2\7\u0095\3\2\2\2\t\u0097\3\2\2"+
		"\2\13\u0099\3\2\2\2\r\u009b\3\2\2\2\17\u009d\3\2\2\2\21\u009f\3\2\2\2"+
		"\23\u00a4\3\2\2\2\25\u00a9\3\2\2\2\27\u00ad\3\2\2\2\31\u00b4\3\2\2\2\33"+
		"\u00ba\3\2\2\2\35\u00bc\3\2\2\2\37\u00be\3\2\2\2!\u00c0\3\2\2\2#\u00c3"+
		"\3\2\2\2%\u00c8\3\2\2\2\'\u00ce\3\2\2\2)\u00d2\3\2\2\2+\u00db\3\2\2\2"+
		"-\u00e1\3\2\2\2/\u00e8\3\2\2\2\61\u00eb\3\2\2\2\63\u00ee\3\2\2\2\65\u00f1"+
		"\3\2\2\2\67\u00f4\3\2\2\29\u00f7\3\2\2\2;\u00fb\3\2\2\2=\u00ff\3\2\2\2"+
		"?\u0102\3\2\2\2A\u0105\3\2\2\2C\u0108\3\2\2\2E\u010b\3\2\2\2G\u010e\3"+
		"\2\2\2I\u0110\3\2\2\2K\u0112\3\2\2\2M\u0114\3\2\2\2O\u0117\3\2\2\2Q\u011a"+
		"\3\2\2\2S\u011c\3\2\2\2U\u011e\3\2\2\2W\u0121\3\2\2\2Y\u0124\3\2\2\2["+
		"\u0127\3\2\2\2]\u012a\3\2\2\2_\u012c\3\2\2\2a\u012e\3\2\2\2c\u0130\3\2"+
		"\2\2e\u0132\3\2\2\2g\u0135\3\2\2\2i\u0138\3\2\2\2k\u013f\3\2\2\2m\u0141"+
		"\3\2\2\2o\u0143\3\2\2\2q\u0145\3\2\2\2s\u0149\3\2\2\2u\u0152\3\2\2\2w"+
		"\u0154\3\2\2\2y\u0162\3\2\2\2{\u016d\3\2\2\2}\u0178\3\2\2\2\177\u0187"+
		"\3\2\2\2\u0081\u0189\3\2\2\2\u0083\u018f\3\2\2\2\u0085\u0193\3\2\2\2\u0087"+
		"\u0195\3\2\2\2\u0089\u0198\3\2\2\2\u008b\u01b6\3\2\2\2\u008d\u01b8\3\2"+
		"\2\2\u008f\u01c3\3\2\2\2\u0091\u0092\7=\2\2\u0092\4\3\2\2\2\u0093\u0094"+
		"\7*\2\2\u0094\6\3\2\2\2\u0095\u0096\7+\2\2\u0096\b\3\2\2\2\u0097\u0098"+
		"\7.\2\2\u0098\n\3\2\2\2\u0099\u009a\7?\2\2\u009a\f\3\2\2\2\u009b\u009c"+
		"\7}\2\2\u009c\16\3\2\2\2\u009d\u009e\7\177\2\2\u009e\20\3\2\2\2\u009f"+
		"\u00a0\7x\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7f\2\2"+
		"\u00a3\22\3\2\2\2\u00a4\u00a5\7e\2\2\u00a5\u00a6\7j\2\2\u00a6\u00a7\7"+
		"c\2\2\u00a7\u00a8\7t\2\2\u00a8\24\3\2\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab"+
		"\7p\2\2\u00ab\u00ac\7v\2\2\u00ac\26\3\2\2\2\u00ad\u00ae\7u\2\2\u00ae\u00af"+
		"\7v\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1\7w\2\2\u00b1\u00b2\7e\2\2\u00b2"+
		"\u00b3\7v\2\2\u00b3\30\3\2\2\2\u00b4\u00b5\7w\2\2\u00b5\u00b6\7p\2\2\u00b6"+
		"\u00b7\7k\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7p\2\2\u00b9\32\3\2\2\2\u00ba"+
		"\u00bb\7]\2\2\u00bb\34\3\2\2\2\u00bc\u00bd\7_\2\2\u00bd\36\3\2\2\2\u00be"+
		"\u00bf\7,\2\2\u00bf \3\2\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7h\2\2\u00c2"+
		"\"\3\2\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7u\2\2\u00c6"+
		"\u00c7\7g\2\2\u00c7$\3\2\2\2\u00c8\u00c9\7y\2\2\u00c9\u00ca\7j\2\2\u00ca"+
		"\u00cb\7k\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7g\2\2\u00cd&\3\2\2\2\u00ce"+
		"\u00cf\7h\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7t\2\2\u00d1(\3\2\2\2\u00d2"+
		"\u00d3\7e\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7v\2\2"+
		"\u00d6\u00d7\7k\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7w\2\2\u00d9\u00da"+
		"\7g\2\2\u00da*\3\2\2\2\u00db\u00dc\7d\2\2\u00dc\u00dd\7t\2\2\u00dd\u00de"+
		"\7g\2\2\u00de\u00df\7c\2\2\u00df\u00e0\7m\2\2\u00e0,\3\2\2\2\u00e1\u00e2"+
		"\7t\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7w\2\2\u00e5"+
		"\u00e6\7t\2\2\u00e6\u00e7\7p\2\2\u00e7.\3\2\2\2\u00e8\u00e9\7,\2\2\u00e9"+
		"\u00ea\7?\2\2\u00ea\60\3\2\2\2\u00eb\u00ec\7\61\2\2\u00ec\u00ed\7?\2\2"+
		"\u00ed\62\3\2\2\2\u00ee\u00ef\7\'\2\2\u00ef\u00f0\7?\2\2\u00f0\64\3\2"+
		"\2\2\u00f1\u00f2\7-\2\2\u00f2\u00f3\7?\2\2\u00f3\66\3\2\2\2\u00f4\u00f5"+
		"\7/\2\2\u00f5\u00f6\7?\2\2\u00f68\3\2\2\2\u00f7\u00f8\7>\2\2\u00f8\u00f9"+
		"\7>\2\2\u00f9\u00fa\7?\2\2\u00fa:\3\2\2\2\u00fb\u00fc\7@\2\2\u00fc\u00fd"+
		"\7@\2\2\u00fd\u00fe\7?\2\2\u00fe<\3\2\2\2\u00ff\u0100\7(\2\2\u0100\u0101"+
		"\7?\2\2\u0101>\3\2\2\2\u0102\u0103\7`\2\2\u0103\u0104\7?\2\2\u0104@\3"+
		"\2\2\2\u0105\u0106\7~\2\2\u0106\u0107\7?\2\2\u0107B\3\2\2\2\u0108\u0109"+
		"\7~\2\2\u0109\u010a\7~\2\2\u010aD\3\2\2\2\u010b\u010c\7(\2\2\u010c\u010d"+
		"\7(\2\2\u010dF\3\2\2\2\u010e\u010f\7~\2\2\u010fH\3\2\2\2\u0110\u0111\7"+
		"`\2\2\u0111J\3\2\2\2\u0112\u0113\7(\2\2\u0113L\3\2\2\2\u0114\u0115\7?"+
		"\2\2\u0115\u0116\7?\2\2\u0116N\3\2\2\2\u0117\u0118\7#\2\2\u0118\u0119"+
		"\7?\2\2\u0119P\3\2\2\2\u011a\u011b\7>\2\2\u011bR\3\2\2\2\u011c\u011d\7"+
		"@\2\2\u011dT\3\2\2\2\u011e\u011f\7>\2\2\u011f\u0120\7?\2\2\u0120V\3\2"+
		"\2\2\u0121\u0122\7@\2\2\u0122\u0123\7?\2\2\u0123X\3\2\2\2\u0124\u0125"+
		"\7>\2\2\u0125\u0126\7>\2\2\u0126Z\3\2\2\2\u0127\u0128\7@\2\2\u0128\u0129"+
		"\7@\2\2\u0129\\\3\2\2\2\u012a\u012b\7-\2\2\u012b^\3\2\2\2\u012c\u012d"+
		"\7/\2\2\u012d`\3\2\2\2\u012e\u012f\7\61\2\2\u012fb\3\2\2\2\u0130\u0131"+
		"\7\'\2\2\u0131d\3\2\2\2\u0132\u0133\7-\2\2\u0133\u0134\7-\2\2\u0134f\3"+
		"\2\2\2\u0135\u0136\7/\2\2\u0136\u0137\7/\2\2\u0137h\3\2\2\2\u0138\u0139"+
		"\7u\2\2\u0139\u013a\7k\2\2\u013a\u013b\7|\2\2\u013b\u013c\7g\2\2\u013c"+
		"\u013d\7q\2\2\u013d\u013e\7h\2\2\u013ej\3\2\2\2\u013f\u0140\7\u0080\2"+
		"\2\u0140l\3\2\2\2\u0141\u0142\7#\2\2\u0142n\3\2\2\2\u0143\u0144\7\60\2"+
		"\2\u0144p\3\2\2\2\u0145\u0146\7/\2\2\u0146\u0147\7@\2\2\u0147r\3\2\2\2"+
		"\u0148\u014a\t\2\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149"+
		"\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014e\b:\2\2\u014e"+
		"t\3\2\2\2\u014f\u0153\t\3\2\2\u0150\u0151\7\17\2\2\u0151\u0153\7\f\2\2"+
		"\u0152\u014f\3\2\2\2\u0152\u0150\3\2\2\2\u0153v\3\2\2\2\u0154\u0155\7"+
		"\61\2\2\u0155\u0156\7,\2\2\u0156\u015a\3\2\2\2\u0157\u0159\13\2\2\2\u0158"+
		"\u0157\3\2\2\2\u0159\u015c\3\2\2\2\u015a\u015b\3\2\2\2\u015a\u0158\3\2"+
		"\2\2\u015b\u015d\3\2\2\2\u015c\u015a\3\2\2\2\u015d\u015e\7,\2\2\u015e"+
		"\u015f\7\61\2\2\u015f\u0160\3\2\2\2\u0160\u0161\b<\2\2\u0161x\3\2\2\2"+
		"\u0162\u0163\7\61\2\2\u0163\u0164\7\61\2\2\u0164\u0168\3\2\2\2\u0165\u0167"+
		"\n\3\2\2\u0166\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168\u0166\3\2\2\2\u0168"+
		"\u0169\3\2\2\2\u0169\u016b\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016c\b="+
		"\2\2\u016cz\3\2\2\2\u016d\u0171\7%\2\2\u016e\u0170\n\3\2\2\u016f\u016e"+
		"\3\2\2\2\u0170\u0173\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172"+
		"\u0174\3\2\2\2\u0173\u0171\3\2\2\2\u0174\u0175\5u;\2\u0175\u0176\3\2\2"+
		"\2\u0176\u0177\b>\2\2\u0177|\3\2\2\2\u0178\u0179\7\62\2\2\u0179\u017b"+
		"\t\4\2\2\u017a\u017c\5\u0085C\2\u017b\u017a\3\2\2\2\u017c\u017d\3\2\2"+
		"\2\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e~\3\2\2\2\u017f\u0188"+
		"\7\62\2\2\u0180\u0184\t\5\2\2\u0181\u0183\5\u0083B\2\u0182\u0181\3\2\2"+
		"\2\u0183\u0186\3\2\2\2\u0184\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0188"+
		"\3\2\2\2\u0186\u0184\3\2\2\2\u0187\u017f\3\2\2\2\u0187\u0180\3\2\2\2\u0188"+
		"\u0080\3\2\2\2\u0189\u018b\7\62\2\2\u018a\u018c\5\u0087D\2\u018b\u018a"+
		"\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e"+
		"\u0082\3\2\2\2\u018f\u0190\t\6\2\2\u0190\u0084\3\2\2\2\u0191\u0194\5\u0083"+
		"B\2\u0192\u0194\t\7\2\2\u0193\u0191\3\2\2\2\u0193\u0192\3\2\2\2\u0194"+
		"\u0086\3\2\2\2\u0195\u0196\t\b\2\2\u0196\u0088\3\2\2\2\u0197\u0199\t\t"+
		"\2\2\u0198\u0197\3\2\2\2\u0199\u008a\3\2\2\2\u019a\u019e\7)\2\2\u019b"+
		"\u019c\7^\2\2\u019c\u019f\t\n\2\2\u019d\u019f\n\13\2\2\u019e\u019b\3\2"+
		"\2\2\u019e\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u01b7\7)\2\2\u01a1"+
		"\u01a2\7)\2\2\u01a2\u01a3\7^\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\5\u0087"+
		"D\2\u01a5\u01a6\5\u0087D\2\u01a6\u01a7\5\u0087D\2\u01a7\u01a8\7)\2\2\u01a8"+
		"\u01b7\3\2\2\2\u01a9\u01aa\7)\2\2\u01aa\u01ab\7^\2\2\u01ab\u01b0\3\2\2"+
		"\2\u01ac\u01ad\7\62\2\2\u01ad\u01b1\7z\2\2\u01ae\u01af\7\62\2\2\u01af"+
		"\u01b1\7Z\2\2\u01b0\u01ac\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b1\u01b2\3\2"+
		"\2\2\u01b2\u01b3\5\u0085C\2\u01b3\u01b4\5\u0085C\2\u01b4\u01b5\7)\2\2"+
		"\u01b5\u01b7\3\2\2\2\u01b6\u019a\3\2\2\2\u01b6\u01a1\3\2\2\2\u01b6\u01a9"+
		"\3\2\2\2\u01b7\u008c\3\2\2\2\u01b8\u01be\7$\2\2\u01b9\u01ba\7^\2\2\u01ba"+
		"\u01bd\t\f\2\2\u01bb\u01bd\n\r\2\2\u01bc\u01b9\3\2\2\2\u01bc\u01bb\3\2"+
		"\2\2\u01bd\u01c0\3\2\2\2\u01be\u01bc\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf"+
		"\u01c1\3\2\2\2\u01c0\u01be\3\2\2\2\u01c1\u01c2\7$\2\2\u01c2\u008e\3\2"+
		"\2\2\u01c3\u01c8\5\u0089E\2\u01c4\u01c7\5\u0089E\2\u01c5\u01c7\5\u0083"+
		"B\2\u01c6\u01c4\3\2\2\2\u01c6\u01c5\3\2\2\2\u01c7\u01ca\3\2\2\2\u01c8"+
		"\u01c6\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u0090\3\2\2\2\u01ca\u01c8\3\2"+
		"\2\2\25\2\u014b\u0152\u015a\u0168\u0171\u017d\u0184\u0187\u018d\u0193"+
		"\u0198\u019e\u01b0\u01b6\u01bc\u01be\u01c6\u01c8\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}